- name: tests connection only, tries every 20 seconds for 5 minutes - with event viewer check
  hosts: all
  gather_facts: no
  tasks:
   - name: Check EVTLog for repeat offenders
     win_shell: |
        $Events = get-eventlog AAAS -after (get-date).AddHours(-1)
        [regex]::Matches($Events.InstanceID, "1234").Count
     register: count
     ignore_errors: true

   - name: Fail based on count
     fail:
        msg: "Repeated Alerts requiring investigation"
     when: count.stdout|int >=2


   - block:
     - name: Log the event Start
       win_shell: |
         if(! (get-eventLog -list | Where-Object {$_.logdisplayname -eq "AAAS"})){
         new-eventlog -logname AAAS -Source "AAAS Events"
         limit-eventlog -logname AAAS -OverflowAction OverwriteOlder -MaximumSize 1024KB
         Write-EventLog -LogName AAAS -source "AAAS Events" -EventID 1234 -EntryType Information -Message "Started Microservice XYZ"
         }
         else{
         Write-EventLog -LogName AAAS -source "AAAS Events" -EventID 1234 -EntryType Information -Message "Started Microservice XYZ"
         }

     - name: beginning testing connection
       wait_for_connection:
          delay: 1
          sleep: 20
          timeout: 300
